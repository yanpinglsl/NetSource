#pragma checksum "D:\架构学习\Source\ZhaoXiSource\AuthProject\Views\Token\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fe7bf4a7b0ddd8901bf064bd9a94d86c514e1909"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Token_Index), @"mvc.1.0.view", @"/Views/Token/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\架构学习\Source\ZhaoXiSource\AuthProject\Views\_ViewImports.cshtml"
using AuthProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\架构学习\Source\ZhaoXiSource\AuthProject\Views\_ViewImports.cshtml"
using AuthProject.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fe7bf4a7b0ddd8901bf064bd9a94d86c514e1909", @"/Views/Token/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f64d6c09ad739a7a4e682bfe521f8773f215187", @"/Views/_ViewImports.cshtml")]
    public class Views_Token_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\架构学习\Source\ZhaoXiSource\AuthProject\Views\Token\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Index</h1>
<p>
    <input type=""button"" id=""btnLogin"" value=""点我登陆"" />
</p>

<p>
    <input type=""button"" id=""btnGet"" value=""Get请求"" />
    <input type=""button"" id=""btnPost"" value=""Post请求"" />
</p>

<p>
    <input type=""button"" id=""btnLoginRefresh"" value=""点我登陆(带刷新)"" />
</p>

<p>
    <input type=""button"" id=""btnGetRefresh"" value=""Get请求(带刷新)"" />
    <input type=""button"" id=""btnPostRefresh"" value=""Post请求(带刷新)"" />
</p>
");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
<script type=""text/javascript"">
       $(function () {
                  $(""#btnLogin"").on(""click"", function () {
                      $.ajax({
                          url: ""/Token/Login?Name=Eleven&Password=123456"",
                          type: ""get"",
                          data: {},
                          success: function (data) {
                              if(data.result){
                                 localStorage[""token""] =data.tValue;
                                 alert(data.tValue);
                               }
                           },
                           datatype: ""json""
                       });
                  });

                    $(""#btnGet"").on(""click"", function () {
                      $.ajax({
                          url: ""/Token/InfoGet"",
                          type: ""get"",
                          data: {},
                          beforeSend: function (XHR) {
                              //发送ajax请求之前向http的head里面加入");
                WriteLiteral(@"验证信息
                              XHR.setRequestHeader('Authorization', 'Bearer ' +  localStorage[""token""]);
                          },
                          success: function (data) {
                              alert(data.result);
                               alert(data.tValue);
                                  }
                          , datatype: ""json""
                        })
                      });

                   $(""#btnPost"").on(""click"", function () {
                      $.ajax({
                          url: ""/Token/InfoPost"",
                          type: ""post"",
                          data: {},
                          beforeSend: function (XHR) {
                              //发送ajax请求之前向http的head里面加入验证信息
                              XHR.setRequestHeader('Authorization', 'Bearer ' +  localStorage[""token""]);
                          },
                          success: function (data) {
                              alert(data.result);
     ");
                WriteLiteral(@"                          alert(data.tValue);
                                  }
                          , datatype: ""json""
                        });
                      });


                  //Refresh
                      $(""#btnLoginRefresh"").on(""click"", function () {
                      $.ajax({
                          url: ""/Token/LoginWithRefresh?Name=Eleven&Password=123456"",
                          type: ""get"",
                          data: {},
                          success: function (data) {
                              if(data.result){
                                 localStorage[""tokenWithRefresh""] =data.tValue;
                                 //alert(data.tValue);
                                 localStorage[""tokenRefresh""] = data.otherValue;
                                 //alert(data.otherValue);
                               }
                           },
                           datatype: ""json""
                       });
                   ");
                WriteLiteral(@"});

                    $(""#btnGetRefresh"").on(""click"", function () {
                      $.ajax({
                          url: ""/Token/InfoGet"", type: ""get"", data: {},
                          beforeSend: function (XHR) {
                              //发送ajax请求之前向http的head里面加入验证信息
                              XHR.setRequestHeader('Authorization', 'Bearer ' +  localStorage[""tokenWithRefresh""]);
                          },
                          success: function (data) {
                              alert(data.result+data.tValue);
                                  },
                          datatype: ""json"",
                          error:function(xhr, status, error){
                              alert(xhr.getAllResponseHeaders());//打印全部头信息
                              alert(xhr.status);//也可以用状态作比较
                              if( xhr.getAllResponseHeaders().indexOf('jwtchallenge: expired')>0)
                              {
                                  //refreshToken");
                WriteLiteral(@"($(""#btnGetRefresh"").click);//直接传递回调最好，没成功
                                  refreshToken($(""#btnGetRefresh""));//传递按钮
                              }
                              }
                            });
                      });

                      function refreshToken(callback){
                          alert(""refresh-token"");
                      $.ajax({
                          url: ""/Token/LoginByRefresh"",
                          type: ""post"",
                          data: {""refreshToken"":localStorage[""tokenRefresh""]},
                          success: function (data) {
                              if(data.result){
                                 localStorage[""tokenWithRefresh""] =data.tValue;
                                 localStorage[""tokenRefresh""] =data.otherValue;
                                 //alert(data.tValue);
                                 //callback();
                                 callback.trigger(""click"");
                              ");
                WriteLiteral(@" }
                           },
                           datatype: ""json""
                       });
                   }

                   $(""#btnPostRefresh"").on(""click"", function () {
                      $.ajax({
                          url: ""/Token/InfoPost"", type: ""post"", data: {},
                          beforeSend: function (XHR) {
                              //发送ajax请求之前向http的head里面加入验证信息
                              XHR.setRequestHeader('Authorization', 'Bearer ' +  localStorage[""tokenWithRefresh""]);
                          },
                          success: function (data) {
                              alert(data.result);
                               alert(data.tValue);
                                  }
                          , datatype: ""json"",
                           error:function(xhr, status, error){
                              //alert(xhr.getAllResponseHeaders());//打印全部头信息
                              //alert(xhr.status);//也可以用状态作比较
       ");
                WriteLiteral(@"                       if( xhr.getAllResponseHeaders().indexOf('jwtchallenge: expired')>0)
                              {
                                  //refreshToken($(""#btnGetRefresh"").click);//直接传递回调最好，没成功
                                  refreshToken($(""#btnGetRefresh""));//传递按钮
                              }
                              }
                         })
                      });
    });
</script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
